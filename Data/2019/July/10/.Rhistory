library(shiny); runApp('C:/Users/skywi/OneDrive - JDSAT/dashboard/SourceData/R Data/Overall_Dashboard_Function.R')
runApp('C:/Users/skywi/OneDrive - JDSAT/dashboard/SourceData/R Data/Overall_Dashboard_Function.R')
library(shiny); runApp('C:/Users/skywi/Desktop/oneDriveJDSAT/dashboard/SourceData/R Data/Overall_Dashboard_Function2.R')
library(shiny); runApp('C:/Users/skywi/Desktop/oneDriveJDSAT/dashboard/SourceData/R Data/Overall_Dashboard_Function2.R')
runApp('C:/Users/skywi/Desktop/oneDriveJDSAT/dashboard/SourceData/R Data/Overall_Dashboard_Function2.R')
runApp('C:/Users/skywi/Desktop/oneDriveJDSAT/dashboard/SourceData/R Data/Overall_Dashboard_Function2.R')
runApp('C:/Users/skywi/Desktop/oneDriveJDSAT/dashboard/SourceData/R Data/Overall_Dashboard_Function2.R')
runApp('C:/Users/skywi/Desktop/oneDriveJDSAT/dashboard/SourceData/R Data/Overall_Dashboard_Function2.R')
runApp('C:/Users/skywi/Desktop/oneDriveJDSAT/dashboard/SourceData/R Data/Overall_Dashboard_Function2.R')
runApp('C:/Users/skywi/Desktop/oneDriveJDSAT/dashboard/SourceData/R Data/Overall_Dashboard_Function2.R')
runApp('C:/Users/skywi/Desktop/oneDriveJDSAT/dashboard/SourceData/R Data/Overall_Dashboard_Function2.R')
runApp('C:/Users/skywi/Desktop/oneDriveJDSAT/dashboard/SourceData/R Data/Overall_Dashboard_Function2.R')
?filter
names(df)
library('shiny')
library('dplyr')
library('readr')
library('ggplot2')
library('forcats')
library('DT')
library('tidyr')
library('stringr')
library('fastDummies')
setwd('C:/Users/skywi/Desktop/Battlerite Project/Personal-Projects/Data/2019/July/10')
df = read_csv('Jul-10-2019_1.csv')
names(df)
table(df$Ranking_Type)
df[, 1:113]
names(df[, 1:113])
names(df[, c(1:113, 115)])
names(df)
names(df[, c(1:73, 112, 113)])
logical(0)
str(0)
?logical
vector(0)
?ifelse
champ = filter(data, Champion == 'Shifu')
champ = filter(df, Champion == 'Shifu')
table(df$Champion)
champ = filter(df, Champion == 'SHIFU')
df2 <- champ %>%
select(Game_ID, User_ID, Round_Won, Region) %>%
group_by(Game_ID, User_ID, Region) %>%
summarize(Game_Won = ifelse(sum(Round_Won) == 3, 1, 0))
df2
region_df <- df2 %>%
ungroup() %>%
select(Region, Game_Won) %>%
group_by(Region) %>%
summarize(Win_Rate = mean(Game_Won))
region_df
df$Region
df$Champion <- factor(df$Champion)
df$Region <- factor(df$Region)
champ = filter(df, Champion == 'SHIFU')
df2 <- champ %>%
select(Game_ID, User_ID, Round_Won, Region) %>%
group_by(Game_ID, User_ID, Region) %>%
summarize(Game_Won = ifelse(sum(Round_Won) == 3, 1, 0))
region_df <- df2 %>%
ungroup() %>%
select(Region, Game_Won) %>%
group_by(Region) %>%
summarize(Win_Rate = mean(Game_Won))
c()
c(c(), 'test')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
?sliderInput
max(df$`Total Time Played`, na.rm = TRUE)
df$`Total Time Played`
df$`Total_Time_Played`
names(champ)
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
max(df$`Total_Time_Played`, na.rm = TRUE)
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
max(df$`Champion_Time_Played`)
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
85000000/3600
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
library(readxl)
install.packages('readxl')
library(readxl)
region_coordinates = read_excel('C:/Users/skywi/Desktop/Battlerite Project/Personal-Projects/Reference Files/region.xlsx')
region_coordinates
?inner_join
coord_data <- inner_join(x = region_df, y = region_coordinates, by = c('Region' = 'Region'))
region_coordinates$Region <- factor(region_coordinates$Region)
coord_data <- inner_join(x = region_df, y = region_coordinates, by = c('Region' = 'Region'))
levels(region_df)
levels(region_df$Region)
levels(region_coordinates$Region)
levels(region_coordinates$Region) <- levels(region_df$Region)
?factor
region_coordinates$Region <- factor(region_coordinates$Region, levels = levels(region_df$Region))
region_coordinates$Region
region_df$Region
levels(df$Region)
df = read_csv('Jul-10-2019_1.csv')
region_coordinates = read_excel('C:/Users/skywi/Desktop/Battlerite Project/Personal-Projects/Reference Files/region.xlsx')
#Remove the ally and enemy data other than comp/team roles
df <- df[, c(1:73, 112, 113)]
df$Champion <- factor(df$Champion)
df$Region <- factor(df$Region)
region_coordinates$Region <- factor(region_coordinates$Region, levels = df$Region)
region_coordinates$Region
region_coordinates$Region <- factor(region_coordinates$Region, levels = levels(df$Region))
champ = filter(df, Champion == 'SHIFU')
df2 <- champ %>%
select(Game_ID, User_ID, Round_Won, Region) %>%
group_by(Game_ID, User_ID, Region) %>%
summarize(Game_Won = ifelse(sum(Round_Won) == 3, 1, 0))
region_df <- df2 %>%
ungroup() %>%
select(Region, Game_Won) %>%
group_by(Region) %>%
summarize(Win_Rate = mean(Game_Won)) %>%
mutate(Win_Rate = fct_reorder(Region, Win_Rate))
inner_join(x = region_df, y = region_coordinates, by = c('Region' = 'Region'))
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
input$measure
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
filtered_Battlerites()
filtered_battlerites
filtered_region
filtered_battlerites$br
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
filtered_battlerites$br
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
filtered_Battlerites()
reactiveValues(br = c())
reactiveValues(br = c())()
a = c(0, 0, 0, 0, 0)
ifelse(a == 0, 1, 0)
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
filtered_Region(0)
filtered_Region()
filtered_Region
filtered_Battlerites
filtered_Battlerites[1]
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
filtered_Battlerites[[1]]
filtered_Battlerites['br1']
filtered_Battlerites[['br1']]
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
filtered_battlerites[[1]]
filtered_battlerites[['br1']]
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
input_total_played_min
input_total_time_played_max
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
coord_data
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
data
region_df
?summarize
region_df <- df2 %>%
ungroup() %>%
select(Region, Game_Won) %>%
group_by(Region) %>%
summarize(Win_Rate = mean(Game_Won))
region_df
mutate(region_df, fct_reorder(Region, Win_Rate))
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
mutate(region_df, Region = fct_reorder(Region, Win_Rate))
inner_join(region_df, region_coordinates, by = c('Region' = 'Region'))
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
levels(data$Region)
levels(ref_regions$Region)
inner_join(x = data, y = ref_regions, by = c('Region' = 'Region'))
left_join(x = data, y = ref_regions, by = c('Region' = 'Region'))
ref_regions
data
data
levels(data$Region)
levels(ref_regions$Region)
levels(df$Region)
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
data
levels(ref_regions$Region)
levels(data$Region)
inner_join(x = data, y = ref_regions, by = c('Region' = 'Region'))
leaflet(data = coord_data) %>%
addTiles() %>%
addCircleMarkers(lng = ~Longitude,
lat = ~Latitude,
stroke = FALSE,
color = 'red',
layerId = ~Region,
label = paste('Server: ', coord_data$Region,
' | City: ', coord_data$City,
' | Win Rate: ', coord_data$Win_Rate)
)
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
8500000/3600
8500000/3600
length(unique(df$Game_ID))
?colorNumeric
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
region_df
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
topo.colors(5)
library('shiny')
library('dplyr')
library('readr')
library('ggplot2')
library('forcats')
library('DT')
library('tidyr')
library('stringr')
library('fastDummies')
library('readxl')
setwd('C:/Users/skywi/Desktop/Battlerite Project/Personal-Projects/Data/2019/July/10')
df <- read_csv('Jul-10-2019_1.csv')
region_coordinates <- read_excel('C:/Users/skywi/Desktop/Battlerite Project/Personal-Projects/Reference Files/region.xlsx')
#Remove the ally and enemy data other than comp/team roles
df <- df[, c(1:73, 112, 113)]
df$Champion <- factor(df$Champion)
df$Region <- factor(df$Region)
region_coordinates$Group <- factor(region_coordinates$Group)
region_coordinates$Group
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
region_df
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
names(df)
library('shiny')
library('dplyr')
library('readr')
library('ggplot2')
library('forcats')
library('DT')
library('tidyr')
library('stringr')
library('fastDummies')
library('readxl')
setwd('C:/Users/skywi/Desktop/Battlerite Project/Personal-Projects/Data/2019/July/10')
df <- read_csv('Jul-10-2019_1.csv')
region_coordinates <- read_excel('C:/Users/skywi/Desktop/Battlerite Project/Personal-Projects/Reference Files/region.xlsx')
#Remove the ally and enemy data other than comp/team roles
df <- df[, c(1:73, 112, 113)]
df$Champion <- factor(df$Champion)
df$Region <- factor(df$Region)
region_coordinates$Group <- factor(region_coordinates$Group)
df$`Battlerite 1` <- factor(df$`Battlerite 1`)
df$`Battlerite 2` <- factor(df$`Battlerite 2`)
df$`Battlerite 3` <- factor(df$`Battlerite 3`)
df$`Battlerite 4` <- factor(df$`Battlerite 4`)
df$`Battlerite 5` <- factor(df$`Battlerite 5`)
unique_champions <- unique(df$Champion)
#Convert seconds to hours
df <- mutate(df, Total_Time_Played = Total_Time_Played/3600,
Champion_Time_Played = Champion_Time_Played/3600)
names(df)
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
?round
round(5.5034932)
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
?get
?vars
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
as.name('test')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
variable
as.name("Region")
data <- filtered_data %>%
select(Game_ID, User_ID, Round_Won, as.name(variable))
data <- filtered_data %>%
select(Game_ID, User_ID, Round_Won, !!as.name(variable))
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
levels(df$League)
levels(factor(df$League))
df$League <- factor(df$League, levels = c('Grand Champion', 'Champion', 'Diamond', 'Platinum', 'Gold',
'Silver', 'Bronze'))
levels(df$League)
df$League <- factor(df$League, levels = c('Grand Champion', 'Champion', 'Diamond', 'Platinum', 'Gold',
'Silver', 'Bronze'), ordered = TRUE)
levels(df$League)
df$League
rev(c('a', 'b'))
df$League <- factor(df$League, levels = rev(c('Grand Champion', 'Champion', 'Diamond', 'Platinum', 'Gold',
'Silver', 'Bronze')), ordered = TRUE)
df$League
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
league_df
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
Name
winrate
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
info
info$Win
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
info$Name
info$style
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
winrate
Name
style
list("Name" == Name, "Win" == winrate, "style" = style)$Name
list("Name" == Name, "Win" == winrate, "style" = style)$style
list("Name" == Name, "Win" == winrate, "style" = style)$winrate
list("Name" == Name, "Win" == winrate, "style" = style)$Win
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
round(31.253040, 2)
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
filter(df, between(Total_Time_Played, 1500, 2500))
filter(df, between(Total_Time_Played, 1500, 2500), Champion == 'ALYSIA')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
max(filtered_data()$Total_Time_Played, na.rm = TRUE)
filtered_data()
test
filtered_data
filtered_data()
1
2
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
input$interactive_slider1
input$interactive_slider2
input$interactive_slider1
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
champ_df()
max(champ_df()$Total_Time_Played, na.rm = TRUE)
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
input_total_time_played_min
input$champion
input$total_played
input$total_played[1]
output$Interactive_Slider1
input$total_played
input$total_played()
input_champ_played_min
input$total_played[1]
total_played[1]
input$total_played
input$total_played['min']
input$total_played[min]
input$champ_played
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
input$total_played
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
max(champ_df()$Total_Time_Played)
c(0, max(champ_df()$Total_Time_Played))
input$champion
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
filter(df, Total_Time_Played == 1058)
filter(df, Total_Time_Played > 1057)
filter(df, Total_Time_Played > 1057)$Total_Time_Played
filter(df, Total_Time_Played > 1057, Champion == 'ALYSIA')$Total_Time_Played
ceiling(0.1)
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
library('shiny')
library('dplyr')
library('readr')
library('ggplot2')
library('forcats')
library('DT')
library('tidyr')
library('stringr')
library('fastDummies')
library('readxl')
setwd('C:/Users/skywi/Desktop/Battlerite Project/Personal-Projects/Data/2019/July/10')
df <- read_csv('Jul-10-2019_1.csv')
region_coordinates <- read_excel('C:/Users/skywi/Desktop/Battlerite Project/Personal-Projects/Reference Files/region.xlsx')
#Remove the ally and enemy data other than comp/team roles
df <- df[, c(1:73, 112, 113)]
df$Champion <- factor(df$Champion)
df$Region <- factor(df$Region)
df$League <- factor(df$League, levels = rev(c('Grand Champion', 'Champion', 'Diamond', 'Platinum', 'Gold',
'Silver', 'Bronze')), ordered = TRUE)
region_coordinates$Group <- factor(region_coordinates$Group)
df$`Battlerite 1` <- factor(df$`Battlerite 1`)
df$`Battlerite 2` <- factor(df$`Battlerite 2`)
df$`Battlerite 3` <- factor(df$`Battlerite 3`)
df$`Battlerite 4` <- factor(df$`Battlerite 4`)
df$`Battlerite 5` <- factor(df$`Battlerite 5`)
unique_champions <- unique(df$Champion)
#Convert seconds to hours and round up to use in input slider
df <- mutate(df, Total_Time_Played = ceiling(Total_Time_Played/3600),
Champion_Time_Played = ceiling(Champion_Time_Played/3600))
filter(df, Champion == 'ALYSIA', Total_Time_Played > 1057)
filter(df, Champion == 'ALYSIA', Total_Time_Played > 1057)$League
test <- filter(df, Champion == 'ALYSIA', Total_Time_Played > 1057)
test2 <- test %>%
d
var <- as.name('League')
test2 <- test %>%
select(Game_ID, User_ID, Round_Won, !!var) %>%
group_by(Game_ID, User_ID, !!var) %>%
summarize(Game_Won = ifelse(sum(Round_Won) == 3, 1, 0))
test2
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite/Battlerite_API_Dashboard.R')
