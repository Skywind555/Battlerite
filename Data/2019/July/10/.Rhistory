library(shiny); runApp('C:/Users/skywi/OneDrive - JDSAT/dashboard/SourceData/R Data/Overall_Dashboard_Function.R')
runApp('C:/Users/skywi/OneDrive - JDSAT/dashboard/SourceData/R Data/Overall_Dashboard_Function.R')
library(shiny); runApp('C:/Users/skywi/Desktop/oneDriveJDSAT/dashboard/SourceData/R Data/Overall_Dashboard_Function2.R')
library(shiny); runApp('C:/Users/skywi/Desktop/Battlerite Project/Personal-Projects/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite Project/Personal-Projects/Battlerite_API_Dashboard.R')
data
filtered_regiongroup
data$`Region Group`
filter(data, `Region Group` %in% filtered_regiongroup)
filter(data, 'Region Group' %in% filtered_regiongroup)
filter(data, 'Region Group' %in% 'USA')
filter(data, 'Region Group' == 'USA')
filter(data, 'Region Group' == 'Europe')
filter(data, `Region Group` == 'Europe')
filter(data, `Region Group` == 'USA')
filter(data, `Region Group` == filtered_regiongroup)
runApp('C:/Users/skywi/Desktop/Battlerite Project/Personal-Projects/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite Project/Personal-Projects/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite Project/Personal-Projects/Battlerite_API_Dashboard.R')
library('shiny')
library('dplyr')
library('readr')
library('ggplot2')
library('forcats')
library('DT')
library('tidyr')
library('stringr')
library('fastDummies')
library('readxl')
library('leaflet')
setwd('C:/Users/skywi/Desktop/Battlerite Project/Personal-Projects/Data/2019/July/10')
df <- read_csv('Jul-10-2019_1.csv')
region_coordinates <- read_excel('C:/Users/skywi/Desktop/Battlerite Project/Personal-Projects/Reference Files/region.xlsx')
#Remove the ally and enemy data other than comp/team roles
df <- df[, c(1:73, 112, 113)]
df$Champion <- factor(df$Champion)
df$Region <- factor(df$Region)
df$League <- factor(df$League, levels = rev(c('Grand Champion', 'Champion', 'Diamond', 'Platinum', 'Gold',
'Silver', 'Bronze')), ordered = TRUE)
region_coordinates$`Region Group` <- factor(region_coordinates$`Region Group`)
#Attach Latitude/Longitude, City, Region Group
region_coordinates$Region <- factor(region_coordinates$Region, levels = levels(df$Region))
df <- inner_join(x = df, y = region_coordinates, by = c('Region' = 'Region'))
df$`Region Group` <- factor(df$`Region Group`)
df <- mutate(df, Region = Region_Clean)
df$Region <- factor(df$Region)
df$`Battlerite 1` <- factor(df$`Battlerite 1`)
df$`Battlerite 2` <- factor(df$`Battlerite 2`)
df$`Battlerite 3` <- factor(df$`Battlerite 3`)
df$`Battlerite 4` <- factor(df$`Battlerite 4`)
df$`Battlerite 5` <- factor(df$`Battlerite 5`)
unique_champions <- unique(df$Champion)
#Convert seconds to hours and round up to use in input slider
df <- mutate(df, Total_Time_Played = ceiling(Total_Time_Played/3600),
Champion_Time_Played = ceiling(Champion_Time_Played/3600))
#Put Change Server_Type variable to show 2v2, 3v3, solo queue
df <- mutate(df, Server_Type = ifelse(Solo_Queue == 1 & Match_Type == 'LEAGUE3V3', 'Solo Queue',
ifelse(Server_Type == 'QUICK3V3', '3V3',
ifelse(Server_Type == 'QUICK2V2', '2V2', Server_Type))))
df$Server_Type <- factor(df$Server_Type)
#Convert 'None' to 'Unranked' - there should only be ranked or unranked
df <- mutate(df, Ranking_Type = ifelse(Ranking_Type == 'NONE', 'UNRANKED', Ranking_Type))
df$Ranking_Type <- factor(df$Ranking_Type)
table(df$Outfit)
names(df)
table(df$Player_Type)
table(mutate(df, Player_Type = ifelse(is.null(Outfit), 'BOT', 'PLAYER'))$Player_Type)
is.null(df$Outfit)
table(df$Outfit)
d2 <- mutate(df, Player_Type = ifelse(is.null(Outfit), 'BOT', 'PLAYER'))
table(d2$Player_Type)
table(df$Outfit, exclude = NULL)
filter(df, is.null(Outfit))
df2 <- mutate(df, Player_Type = ifelse(is.na(Outfit), 'BOT', 'PLAYER'))
table(df2$Player_Type)
table(df$Outfit, exclude = NULL)
table(df$Attachment, exclude = NULL)
names(df)
runApp('C:/Users/skywi/Desktop/Battlerite Project/Personal-Projects/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite Project/Personal-Projects/Battlerite_API_Dashboard.R')
runApp('C:/Users/skywi/Desktop/Battlerite Project/Personal-Projects/Battlerite_API_Dashboard.R')
